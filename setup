#!/bin/bash

set -x
set -e

if ocamlfind query sodium >/dev/null 2>&1; then
    SODIUM=1
fi

function ocamlbuild { command ocamlbuild -use-ocamlfind -classic-display "$@"; }

function release {
    git tag -f "v$1"
    git push origin master
    git push --force origin "v$1"
    opam-publish prepare "macaroons.$1" "https://github.com/nojb/ocaml-macaroons/archive/v$1.tar.gz"
    opam-publish submit "./macaroons.$1"
}

function doc {
    ocamlbuild -docflag -colorize-code doc/api.docdir/index.html
    cp doc/style.css api.docdir
}

function gh-pages {
    git clone `git config --get remote.origin.url` .gh-pages --reference .
    git -C .gh-pages checkout --orphan gh-pages
    git -C .gh-pages reset
    git -C .gh-pages clean -dxf
    cp api.docdir/* .gh-pages/
    git -C .gh-pages add .
    git -C .gh-pages commit -m "Update Pages"
    git -C .gh-pages push origin gh-pages -f
    rm -rf .gh-pages
}

function build {
    if [ -z $SODIUM ]; then
        ocamlbuild lib/macaroons.{cma,cmxa,cmxs}
    else
        ocamlbuild lib/{sodium_,}macaroons.{cma,cmxa,cmxs}
    fi
}

function test {
    ocamlbuild lib_test/test.byte
    ./test.byte
}

function install {
    ocamlfind install macaroons lib/META _build/lib/*macaroons.{mli,cmi,cmti,cma,cmxa,cmxs}
}

function uninstall {
    ocamlfind remove macaroons
}

case "$1" in
    release)
        [ -z "$2" ] && echo "Please specify VERSION (without the v)" && exit 1
        # make sure there are no uncommited changes
        git diff --quiet && git diff --cached --quiet
        # make sure it compiles
        build
        # make sure it passes tests
        test
        # update online docs
        doc
        gh-pages
        release $2
        ;;

    build)
        build
        ;;

    clean)
        ocamlbuild -clean
        ;;

    install)
        build
        install
        ;;

    uninstall)
        uninstall
        ;;

    reinstall)
        uninstall
        install
        ;;

    doc)
        doc
        ;;

    gh-pages)
        doc
        gh-pages
        ;;

    test)
        build
        test
        ;;

    *)
        build
        ;;
esac
